#!/usr/bin/env ruby

require 'tweetstream'
require 'growl_notify'

#GrowlNotify.config do |gconf|
  #gconf.application_name      = "stream-rider"
  #gconf.notifications         = ["notify" , "mentions" , "search"]
  #gconf.default_notifications = ["notify"] 
#end

yaml = YAML.load(open(File.expand_path('~/.stream-rider/config')).read)

TweetStream.configure do |config|
  config.consumer_key       = yaml["consumer_key"]
  config.consumer_secret    = yaml["consumer_secret"]
  config.oauth_token        = yaml["oauth_token"]
  config.oauth_token_secret = yaml["oauth_token_secret"]
  config.auth_method        = :oauth
end

def image_path(tweet)
  path = nil
  url = tweet.user.profile_image_url_https
  if url =~ /profile_images\/(.*?)\/(.*)/
    path = File.join(File.expand_path('~/.stream-rider/images') , "#{$1}_#{$2}")
  end
  unless File.exist?(path)
    `curl --silent -o #{path} #{url}`
  end
  path
end

def growl(tweet)
  puts "#{tweet.user.screen_name} : #{tweet.text}"
  #GrowlNotify.normal(
  #:application_name => "stream-rider",
  #:title       => tweet.user.screen_name, 
  #:description => tweet.text ,
  #:icon        => path 
  #)

  name = tweet.text =~ /@basyura/ ? 'stream-rider-reply' : 'stream-rider'

  image = image_path(tweet)
  text  = tweet.text.gsub('"', '\"')
  cmd = "growlnotify -t '#{tweet.user.screen_name}'"
  cmd << " --image #{image}" if image
  cmd << " -m \"#{text}\" -n #{name}"
  `#{cmd}`
end

#EventMachine::run do
  #TweetStream::Client.new.track('rubykaigi') {|tweet| growl(tweet) }
  #TweetStream::Client.new.userstream {|tweet| growl(tweet) }
#end

puts "start streaming ..."

while true
  begin
    TweetStream::Client.new.userstream {|tweet| growl(tweet) }
  rescue
    puts "streaming error ..."
  end
  sleep 5
end
